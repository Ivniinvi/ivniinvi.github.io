{"version":3,"sources":["Content.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Content","props","href","link","target","className","title","src","image","alt","description","App","date","Date","projects","id","useWindowSize","isPortrait","innerWidth","innerHeight","outerHeight","outerWidth","useMediaQuery","query","icon","faGithub","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPASe,SAASA,EAAQC,GAC5B,OACI,oBAAGC,KAAMD,EAAME,KAAMC,OAAO,SAASC,UAAU,qCAA/C,UACI,qBAAKA,UAAU,cAAf,SAA8BJ,EAAMK,QACpC,qBAAKD,UAAU,gBAAf,SACI,qBAAKE,IAAKN,EAAMO,MAAOC,IAAKR,EAAMK,UAEtC,4BAAIL,EAAMS,iB,kBCgCPC,MApCf,WACE,IAAMC,EAAO,IAAIC,KAEXC,EACJ,qBAAKC,GAAG,UAAUV,UAAU,aAA5B,SACE,cAACL,EAAD,CACEM,MAAM,sBACNI,YAAY,GACZP,KAAK,gCACLK,MAAM,wEAKZ,EAA6DQ,cACvDC,GADN,EAAQC,WAAR,EAAoBC,YAApB,EAAiCC,YAAjC,EAA8CC,WAC3BC,wBAAc,CAAEC,MAAO,6BAE1C,OACE,sBAAKlB,UAAU,eAAf,UACE,sBAAKU,GAAG,SAASV,UAAYY,EAAwB,WAAb,aAAxC,UACE,qBAAKF,GAAG,YAAR,0BACA,sBAAKA,GAAG,WAAR,UACE,mBAAGb,KAAK,8BAA8BE,OAAO,SAA7C,SAAsD,cAAC,IAAD,CAAiBoB,KAAMC,QAC7E,6CAIFX,GAAW,qBAAKC,GAAG,YAAR,+BAEb,sBAAKA,GAAG,SAAR,0BACgBH,EAAKc,qBC5BZC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6b679972.chunk.js","sourcesContent":["import React, { ReactElement } from 'react'\r\n\r\ninterface Props {\r\n    title: string,\r\n    description: string,\r\n    image: string,\r\n    link: string\r\n}\r\n\r\nexport default function Content(props: Props): ReactElement {\r\n    return (\r\n        <a href={props.link} target=\"_blank\" className=\"contentBox colorMerge bgColorMerge\">\r\n            <div className=\"contentHead\">{props.title}</div>\r\n            <div className=\"contentImgDiv\">\r\n                <img src={props.image} alt={props.title} />\r\n            </div>\r\n            <p>{props.description}</p>\r\n        </a>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport useWindowSize from \"@rooks/use-window-size\"\r\nimport { useMediaQuery } from 'react-responsive'\r\n\r\nimport Content from './Content';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faInstagram, faLinkedin, faTwitter, faYoutube, faGithub } from '@fortawesome/free-brands-svg-icons'\r\n\r\n\r\nfunction App() {\r\n  const date = new Date();\r\n\r\n  const projects = ( //MATT: This is where you would put your projects\r\n    <div id=\"content\" className=\"horizontal\">\r\n      <Content\r\n        title=\"Open Source Commits\"\r\n        description=\"\"\r\n        link=\"https://github.com/beestation\"\r\n        image=\"https://pbs.twimg.com/media/EzgKy7vWUAAiJ9j?format=png&name=small\"\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const { innerWidth, innerHeight, outerHeight, outerWidth } = useWindowSize();\r\n  const isPortrait = useMediaQuery({ query: '(orientation: portrait)' });\r\n\r\n  return (\r\n    <div className=\"App vertical\">\r\n      <div id=\"header\" className={!isPortrait?\"horizontal\":\"vertical\"}>\r\n        <div id=\"nameTitle\">MATT HEADLEY</div>\r\n        <div id=\"titleBar\">\r\n          <a href=\"https://github.com/Ivniinvi\" target=\"_blank\"><FontAwesomeIcon icon={faGithub} /></a>\r\n          <a>Resume</a>\r\n        </div>\r\n      </div>\r\n\r\n      {!projects ? <div id=\"emptyText\">Projects go here!</div> : projects}\r\n\r\n      <div id=\"footer\">\r\n        Matt Headley {date.getFullYear()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}